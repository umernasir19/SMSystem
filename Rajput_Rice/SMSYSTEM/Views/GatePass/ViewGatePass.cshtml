
@{
    ViewBag.Title = "View Gate Pass";
}
<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Gate Pass</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Gate Pass</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>
<!-- Main content -->
<section class="content">
    <div class="row">
        <div class="col-12">
            <!-- /.card -->
            <div class="card">
                <div class="card-header">
                    <h3 class="card-title"><button class="btn btn-primary" data-toggle="modal" data-target="#modal-default" id="btnaddnewpopup">Create Gate Pass</button></h3>
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <table id="example11" class="table table-bordered table-striped">
                        
                    </table>
                </div>
                <!-- /.card-body -->
            </div>
            <!-- /.card -->
        </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
<!-- /.content -->
<div class="modal fade" id="modal-default" data-backdrop="static" data-keyboard="false">
    <div class="modal-dialog modal-xl">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title">Add New Purchase</h4>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body" id="modelbody">
            </div>
            <div class="modal-footer justify-content-between">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" id="btnaddnewemptype" class="btn btn-primary">Save changes</button>
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- /.modal -->
<!-- ./wrapper -->
@section MyScripts{
    <script type="text/javascript">
        var dataTable;

        var errorarray;
        $(document).ready(function () {
            bindDataToTable();
        });
        //show popup
        //show popup
        $("#btnaddnewpopup").click(function () {
            //$.post("/Customer/AddCustomer", function (data) {
            //    $("#modal-default").html(data);
            //});

            $("#modelbody").load("/GatePass/AddGatePass", function (e) {
                $("#modal-default").modal("show");


            });

        })







        $(function () {
            //$("#example1").DataTable();
            //$('#example2').DataTable({
            //    "paging": true,
            //    "lengthChange": false,
            //    "searching": false,
            //    "ordering": true,
            //    "info": true,
            //    "autoWidth": false,
            //});
        });

        function bindDataToTable() {
            $.ajax({
                url: "/Purchase/ViewAllPurchase",
                success: function (data) {
                    console.log(data);
                    bindCustomersInDataTable(data);
                }
            });
        }

        function bindCustomersInDataTable(data) {
            var status = "Blocked".toString();
            var table = $('#example1').DataTable({
                data: data.data,// JSON.parse(data.data),

                columns: [
                    { data: 'poNumber' },
                    { data: 'vendorName' },
                    {
                        data: 'purchaseDate',
                        render: function (data, type, sort) {
                            return moment(data).format("DD-MM-YYYY");
                        }
                    },
                    { data: 'netAmount' },
                    { data: 'description' },


                    {
                        "data": "poNumber",
                        "render": function (ID, type, full, meta) {

                            return '<a href="#" class="btn btn-info" onclick="ShowEmployee(' + ID + ')"><i class="fa fa-eye"></i></a> <a href="#" class="btn btn-danger" onclick="ConfirmDelete(' + ID + ')"><i class="fa fa-trash"></i></a>  <a href="#" class="btn btn-info" onclick="PrintInvoice('+"'" + ID +"'"+ ')"><i class="fas fa-file-invoice"></i></a>'

                        },
                        "orderable": true,
                        "searchable": true,


                    }
                ]
            });

        }
        function ShowEmployee(CustomerID) {

            var url = "/Employee/ShowEmployee?Id=" + CustomerID;
            window.location.href = url;
            //$("#modelbody").load(url, function (e) {
            //    var id = $('#Customer_Id').val();
            //    if (id > 0) {
            //        $('#btnaddnewcustomer').html("update ");
            //    }
            //    $("#modal-default").modal("show");
            //});
        }
        function PrintInvoice(CustomerID) {

            var url = "/Purchase/PrintInvoice?Id=" + CustomerID;
            window.location.href = url;
            //$("#modelbody").load(url, function (e) {
            //    var id = $('#Customer_Id').val();
            //    if (id > 0) {
            //        $('#btnaddnewcustomer').html("update ");
            //    }
            //    $("#modal-default").modal("show");
            //});
        }

        function ConfirmDelete(CustomerID) {
            const swalWithBootstrapButtons = Swal.mixin({
                customClass: {
                    confirmButton: 'btn btn-success',
                    cancelButton: 'btn btn-danger'
                },
                buttonsStyling: false
            })

            swalWithBootstrapButtons.fire({
                title: 'Are you sure?',
                text: "",
                type: 'warning',
                showCancelButton: true,
                confirmButtonText: 'Yes, Delete!',
                cancelButtonText: 'No, cancel!',
                reverseButtons: true
            }).then((result) => {
                if (result.value) {
                    $.ajax({
                        type: 'GET',
                        url: '/Employee/DeleteEmployee?id=' + CustomerID,
                        dataType: 'JSON',
                        success: function (res) {
                            if (res.success) {
                                swalWithBootstrapButtons.fire(
                                    'Done!',
                                    'Blocked',
                                    'success'
                                    )
                                window.location.href = "/Employee/ViewEmployee"
                            }
                            else {
                                swalWithBootstrapButtons.fire(
                                    'Error!',
                                    'Failes',
                                    'success'
                                    )
                            }
                        },
                        failure: function (res) {
                            console.log(res);
                        },
                        err: function (res) {
                            console.log(res);
                        }
                    })




                } else if (
                    /* Read more about handling dismissals below */
                  result.dismiss === Swal.DismissReason.cancel
                ) {
                    swalWithBootstrapButtons.fire(
                      'Cancelled',
                      '',
                      'error'
                    )
                }
            })

        }

        function validateEntrires() {
            errorarray = [];
           // alert(errorarray.length);
            if ($('#vendorIdx option:selected').val()=='') {
                errorarray.push("Please Select Vendor")
               // alert(errorarray.length);
            }
            if ((new Date($('#purchaseDate').val())) > (new Date)) {
                errorarray.push("Future Date is not Allowed");
              //  alert(errorarray.length);
            }
            if ((new Date($('#purchaseDate').val())) > (new Date)) {
                errorarray.push("Future Date is not Allowed");
               // alert(errorarray.length);
            }
            if ($('#paidAmount').val() == '' || $('#paidAmount').val() <0) {
                errorarray.push("Paid Amount is not correct")
               // alert(errorarray.length);
            }
            if ($('#paidAmount').val() > $('#totalAmount').val()) {
                errorarray.push("Paid Amount Must be less/equal than Total Amount")
               // alert(errorarray.length);
            }
            //alert(errorarray.length);
        }


        //add milestone button event
        $("#btnaddnewemptype").click(function (e) {
            var form = $("#gatepassform");
            $.validator.unobtrusive.parse(form);
            if (!($(form).valid())) {
                return false;
            }
            else {

                var driver = $('#drivername').val();
                var numberplate = $('#numberplate').val();
                var saleid = $('#saleID option:selected').val();
                console.log(driver);
                console.log(saleid);
                var url = "/GatePass/GatePass?driver=" + driver + "&numberplate=" + numberplate + "&sale=" + saleid;
                var data = JSON.stringify({
                    'numberplate': numberplate,
                    'sale': saleid
                });
                console.log(url);
                window.location.href = url;

                $.ajax({
                    type: "POST",
                    url: "/GatePass/ADDUpdate",
                    data: $(form).serialize(),//JSON.stringify(milestonearray),// $(form).serialize(),
                    //contentType: 'application/json',
                    //dataType: 'json',
                    //contentType: false,
                    //processData: false,
                    //cache: false,
                    success: function (res) {
                        console.log(res);
                        if (res.success) {
                            Command: toastr["success"]("", "Added Successfuly")

                            toastr.options = {
                                "closeButton": true,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": true,
                                "positionClass": "toast-top-center",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                            window.location.href = res.url
                        }
                        else if (res.success == false && res.msg == 'Failed') {
                                Command: toastr["error"]("Invalid ", " Failed")

                            toastr.options = {
                                "closeButton": false,
                                "debug": false,
                                "newestOnTop": false,
                                "progressBar": true,
                                "positionClass": "toast-top-center",
                                "preventDuplicates": false,
                                "onclick": null,
                                "showDuration": "300",
                                "hideDuration": "1000",
                                "timeOut": "5000",
                                "extendedTimeOut": "1000",
                                "showEasing": "swing",
                                "hideEasing": "linear",
                                "showMethod": "fadeIn",
                                "hideMethod": "fadeOut"
                            }
                        }
                    },
                    failure: function (res) {
                        console.log(res);
                    },
                    err: function (res) {
                        console.log(res);
                    }

                })
            }


           






        });



    </script>
}
