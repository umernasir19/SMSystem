@model HrProperty.Models.ExpenseVoucher_Property

@{
    ViewBag.Title = "ExpenseVouchers";
}

<section class="content-header">
    <div class="container-fluid">
        <div class="row mb-2">
            <div class="col-sm-6">
                <h1>Expense Vouchers</h1>
            </div>
            <div class="col-sm-6">
                <ol class="breadcrumb float-sm-right">
                    <li class="breadcrumb-item"><a href="#">Home</a></li>
                    <li class="breadcrumb-item active">Expense Vouchers</li>
                </ol>
            </div>
        </div>
    </div><!-- /.container-fluid -->
</section>

<section class="content">
    <div class="row">
        <div class="col-12">
            <div class="card">
                <div class="card-header">
                    
                </div>
                <!-- /.card-header -->
                <div class="card-body">
                    <form role="form" id="formadddemptype">
                        
                        <div class="row">
                            <div class="col-sm-6">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>CHILD HEAD*:</label>
                                    @Html.EditorFor(model => model.voucherNo, new { htmlAttributes = new { @placeholder = "Item Name*:", @class = "form-control" ,@readonly=true} })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.voucherNo, "", new { @class = "text-danger" })
                            </div>

                            <div class="col-sm-6">
                            
                                <div class="form-group">
                                    <label>Voucher Date*:</label>
                                    @Html.EditorFor(model => model.VoucherDate, new { htmlAttributes = new { @placeholder = "Item Name*:", @class = "form-control" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.VoucherDate, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row">
                            <div class="col-sm-6">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>CHILD HEAD*:</label>
                                    @Html.DropDownListFor(model => model.COAID, new SelectList(Model.COACHILDS, "idx", "childHeadName"), "Select CHILD", new { @Class = "form-control font-weight-bold" })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.COAID, "", new { @class = "text-danger" })
                            </div>
                           
                            <div class="col-sm-6">
                             
                                <div class="form-group">
                                    <label>Memo*:</label>
                                    @Html.EditorFor(model => model.Memo, new { htmlAttributes = new { @placeholder = "Memo*:", @class = "form-control" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.Memo, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="row">
                           

                            <div class="col-sm-6">

                                <div class="form-group">
                                    <label>Amount*:</label>
                                    @Html.EditorFor(model => model.amount, new { htmlAttributes = new { @placeholder = "amount*:", @class = "form-control" } })

                                </div>
                                @Html.ValidationMessageFor(model => model.amount, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="row" id="pymntmodeslction" style="display:none;">
                            <div class="col-sm-3">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>Payment Mode*:</label>
                                    @Html.DropDownListFor(model => model.paymentModeIdx, new SelectList(Model.Paymentmodelist, "idx", "paymentMode"), "Select payment Mode", new { @Class = "form-control font-weight-bold" })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.paymentModeIdx, "", new { @class = "text-danger" })
                            </div>
                        </div>


                        <div class="row" id="pymnmode" style="display:none">
                            <div class="col-sm-4 bnkchqpaymnt">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>Bank Name*:</label>
                                    @Html.DropDownListFor(model => model.bankIdx, new SelectList(Model.BankList, "idx", "bankName"), "Select Bank", new { @Class = "form-control font-weight-bold" })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.bankIdx, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4 bnkchqpaymnt">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>Account/Cheque Number*:</label>
                                    @Html.EditorFor(model => model.accorChequeNumber, new { htmlAttributes = new { @placeholder = "Cheque/Account Number", @class = "form-control" } })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.accorChequeNumber, "", new { @class = "text-danger" })
                            </div>
                            <div class="col-sm-4 bnkpddt">
                                <!-- text input -->
                                <div class="form-group">
                                    <label>Paid Date*:</label>
                                    @Html.EditorFor(model => model.paidDate, new { htmlAttributes = new { @placeholder = "Cheque Number", @class = "form-control" } })
                                    @*<input type="text"  class="form-control" placeholder="@ViewBag.CustomerCode" disabled>*@
                                </div>
                                @Html.ValidationMessageFor(model => model.paidDate, "", new { @class = "text-danger" })
                            </div>



                        </div>


                        <div class="row">


                            <div class="col-sm-6">

                                <div class="form-group">
                                   
                                    <h3 class="card-title">
                                        <input type="button" class="btn btn-primary" id="createnewvoucheer" value="Add New Voucher" />
                                       
                                    </h3>

                                </div>
                            </div>
                        </div>

                    </form>
                </div>

                </div>
            </div>
        <!-- /.col -->
    </div>
    <!-- /.row -->
</section>
@section MyScripts{
<script type="text/javascript">
   
    $("#paymentModeIdx").on('change', function () {
        var ddvaue = $("#paymentModeIdx option:selected").val();
        if (ddvaue == "1") {

        }
        if (ddvaue == "2") {

        }

    });
   
    $("#amount").keyup(function () {
        var paidAmount = $(this).val();

        if (paidAmount <= 0) {
            // alert("hello");
            $('#pymntmodeslction').hide();
            $('#paymentModeIdx').val('');
            $('#pymnmode').hide();
           // $('#bnkpddt').hide();
        }
        if (paidAmount > 0) {
           //  alert("hello");
            $('#pymntmodeslction').show();
        }
    });

    $("#paymentModeIdx").on('change',function () {
        var paymentModeIdx = $('#paymentModeIdx').val();
        if (paymentModeIdx == "1") {
            //$('#chequemode').css('display', 'none');
            //$('#BankMode').css('display', 'none');

            $('#pymnmode').hide();

        }
        if (paymentModeIdx == "2") {
            //cheque
            $('#pymnmode').show();//('display', 'block');

            $('.bnkpddt').show();
        }
        if (paymentModeIdx == "3") {
            //bank
            $('#pymnmode').show();
            $('.bnkpddt').css('display', 'none');

        }

    });


    $("#createnewvoucheer").click(function (e) {
        var form = $("#formadddemptype");
        $.validator.unobtrusive.parse(form);
        if (!($(form).valid())) {
            return false;
        }


        else {
            

            var data = {
                voucherNo: $('#voucherNo').val(),
                VoucherDate: $('#VoucherDate').val(),
                COAID: $('#COAID option:selected').val(),
                amount: $('#amount').val(),
                Memo: $('#Memo').val(),
                paymentModeIdx: $('#paymentModeIdx  option:selected').val(),
                bankIdx: $('#bankIdx  option:selected').val(),
                accorChequeNumber: $('#accorChequeNumber').val(),
                paidDate: $('#paidDate').val(),
            }

            console.log(data);
            $.ajax({
                type: "POST",
                url: "/Finance/AddUpdate",
                data:JSON.stringify(data),
                contentType: 'application/json',
                dataType: 'json',
                //contentType: false,
                //processData: false,
                //cache: false,
                success: function (res) {
                    console.log(res);
                    if (res.success) {
                        Command: toastr["success"]("", "Added Successfuly")

                        toastr.options = {
                            "closeButton": true,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": true,
                            "positionClass": "toast-top-center",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "5000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                        window.location.href = res.url
                    }
                    else if (res.success == false && res.msg == 'Failed') {
                            Command: toastr["error"]("Invalid ", " Failed")

                        toastr.options = {
                            "closeButton": false,
                            "debug": false,
                            "newestOnTop": false,
                            "progressBar": true,
                            "positionClass": "toast-top-center",
                            "preventDuplicates": false,
                            "onclick": null,
                            "showDuration": "300",
                            "hideDuration": "1000",
                            "timeOut": "5000",
                            "extendedTimeOut": "1000",
                            "showEasing": "swing",
                            "hideEasing": "linear",
                            "showMethod": "fadeIn",
                            "hideMethod": "fadeOut"
                        }
                    }
                },
                failure: function (res) {
                    console.log(res);
                },
                err: function (res) {
                    console.log(res);
                }

            })

        }




    });
  </script>
    }